from typing import Dict

HELP_INFO = """
<b>/start</b> - <em>–∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞</em>
<b>/estimate</b> - <em>–û—Ü–µ–Ω–∏—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã –ø–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º</em>
<b>/repository</b> - <em>–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –≥–∏—Ç—Ö–∞–± —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å –ø—Ä–æ–µ–∫—Ç–æ–º</em>
<b>/help</b> - <em>–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥</em>
<b>/about</b> - <em>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ</em>
"""

ABOUT_INFO = """
<b>–ù–ê–® –ë–û–¢</b>
<b>–ß—Ç–æ –¥–µ–ª–∞–µ—Ç?</b> - <em>–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ —Ü–µ–Ω—ã –∫–≤–∞—Ä—Ç–∏—Ä –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ.</em>
<b>–ö–∞–∫ —ç—Ç–æ —É—Å—Ç—Ä–æ–µ–Ω–æ?</b> - <em>–ú—ã —Å–æ–±–∏—Ä–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–ª–æ—â–∞–¥–æ–∫, –∏ –Ω–∞ –µ–µ –æ—Å–Ω–æ–≤–µ –ø—Ä–∏–∫–∏–¥—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å.</em>
<b>–ó–∞–ø—É—Ç–∞–ª—Å—è?</b> - <em>–í–≤–µ–¥–∏ /help</em>
"""

START_ESTIMATION = """
–ù–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ –±—É–¥–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –≤–≤–µ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞.\n
–ß–µ–º –±–æ–ª—å—à–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤–≤–µ–¥–µ—Ç–µ - —Ç–µ–º —Ç–æ—á–Ω–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞.
–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ /restart –∏ –Ω–∞—á–Ω–µ—Ç–µ –∑–∞–Ω–æ–≤–æ.
"""

GITHUB_LINK = """
–í–æ—Ç –Ω–∞—à –≥–∏—Ç—Ö–∞–± —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:
https://github.com/NeKonnnn/PetProject-price-real-estate-in-St.-Petersburg
–ù–æ –ª—É—á—à–µ —Ç—É–¥–∞ –Ω–µ –ª–µ–∑—å))
"""

service_not_available_respond_text = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–µ—Ä–≤–∏—Å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'

text_output_for_command = {
    'help': HELP_INFO,
    'about': ABOUT_INFO,
    'repository': GITHUB_LINK,
}

feature_names_for_message = {
    'address': '–ê–¥—Ä–µ—Å –∫–≤–∞—Ä—Ç–∏—Ä—ã',
    'rooms': '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç',
    'total_area': '–ü–ª–æ—â–∞–¥—å –∫–≤–∞—Ä—Ç–∏—Ä—ã',
    'stage': '–≠—Ç–∞–∂',
    'elevator': '–ï—Å—Ç—å –ª–∏ –ª–∏—Ñ—Ç?',
    'largage_elevator': '–ï—Å—Ç—å –ª–∏ –≥—Ä—É–∑–æ–≤–æ–π –ª–∏—Ñ—Ç?',
}


def format_user_features(data: Dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∏—á–∏ –≤ —É–¥–æ–±–æ—á–∏—Ç–∞–µ–º—É—é —Å—Ç—Ä–æ–∫—É."""
    features_repr = 'üè¢ –í—ã –≤–≤–µ–ª–∏ —Å–ª—É–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –æ –∫–≤–∞—Ä—Ç–∏—Ä–µ:üè¢\n'
    for feature_name, cyr_name in feature_names_for_message.items():
        value = data[feature_name]
        if feature_name in {'largage_elevator', 'elevator'}:
            value = '–¥–∞' if value else '–Ω–µ—Ç'
        if feature_name == 'rooms':
            value = value if value else '0 (—Å—Ç—É–¥–∏—è)'
        features_repr += f'{cyr_name} -> <b>{value}</b>\n'
    return features_repr


def format_model_response(model_response: Dict[str, float]) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç API –º–æ–¥–µ–ª–∏ –≤ —É–¥–æ–±–æ—á–∏—Ç–∞–µ–º—É—é —Å—Ç—Ä–æ–∫—É."""
    return f"""\n‚≠êÔ∏è–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ü–µ–Ω–∫–∏‚≠êÔ∏è
–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –º–µ—Ç—Ä ‚âà üò±<b>{model_response['m2_price'] / 1_000:.1f} —Ç.—Ä./–º2</b>üò±
–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å ‚âà üí≤<b>{model_response['total_price'] / 1_000_000:.1f} –º–ª–Ω. —Ä—É–±–ª–µ–π</b>üí≤.

üëç–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞!üëç
–•–æ—á–µ—à—å –µ—â–µ? - –Ω–∞–∂–º–∏ ‚û°Ô∏è /estimate)
"""
